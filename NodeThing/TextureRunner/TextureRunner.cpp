#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#include <d3d9.h>
#include <stdint.h>
#include "../TextureLib/TextureLib.hpp"

extern "C" {
  int  _fltused;

  float __declspec(naked) _CIcos()
  {
    _asm {
      fcos
      ret
    };
  };

  float __declspec(naked) _CIsin()
  {
    _asm {
      fsin
      ret
    };
  };

  float __declspec(naked) _CIsqrt()
  {
    _asm {
      fsqrt
      ret
    };
  };

};

typedef uint8_t uint8;

IDirect3DDevice9 *gDevice;
IDirect3D9 *gD3D;
HWND gHwnd;

const int xRes = 800;
const int yRes = 600;

static D3DPRESENT_PARAMETERS gPresentParmas = {
  xRes, yRes, D3DFMT_A8R8G8B8, 0, D3DMULTISAMPLE_NONE,
  0, D3DSWAPEFFECT_DISCARD, 0, true, true,
  D3DFMT_D24S8, 0, 0, D3DPRESENT_INTERVAL_IMMEDIATE };

  uint8 dummy[122] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // width, height
    0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // num textures, final texture
    0x50,0x8d,0x05,0x24,0x10,0x28,0x70,0x50,0x68,0x00,0x00,0xa0,0x40,0x68,0x00,0x00,
    0xa0,0x40,0x68,0x00,0x00,0x00,0x00,0xff,0x90,0x04,0x00,0x00,0x00,0x81,0xc4,0x0c,
    0x00,0x00,0x00,0x58,0x50,0x68,0xe1,0x7a,0x8c,0x41,0x68,0xe1,0x7a,0x8c,0x41,0x68,
    0x01,0x00,0x00,0x00,0xff,0x90,0x04,0x00,0x00,0x00,0x81,0xc4,0x0c,0x00,0x00,0x00,
    0x58,0x50,0x68,0x9a,0x99,0x39,0x40,0x68,0x00,0x00,0x00,0x00,0x68,0x66,0x66,0x26,
    0x40,0x68,0x01,0x00,0x00,0x00,0x68,0x02,0x00,0x00,0x00,0xff,0x90,0x08,0x00,0x00,
    0x00,0x81,0xc4,0x14,0x00,0x00,0x00,0x58,0x58,0xc3
  };

  uint8 dummy1[161] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // width, height
    0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // num textures, final texture
    0x50,0x8d,0x05,0x24,0x10,0x28,0x70,0x50,0x68,0x00,0x00,0xa0,0x40,0x68,0x00,0x00,
    0xa0,0x40,0x68,0x00,0x00,0x00,0x00,0xff,0x90,0x04,0x00,0x00,0x00,0x81,0xc4,0x0c,
    0x00,0x00,0x00,0x58,0x50,0x68,0xe1,0x7a,0x8c,0x41,0x68,0xe1,0x7a,0x8c,0x41,0x68,
    0x01,0x00,0x00,0x00,0xff,0x90,0x04,0x00,0x00,0x00,0x81,0xc4,0x0c,0x00,0x00,0x00,
    0x58,0x50,0x68,0x9a,0x99,0x39,0x40,0x68,0x00,0x00,0x00,0x00,0x68,0x66,0x66,0x26,
    0x40,0x68,0x01,0x00,0x00,0x00,0x68,0x02,0x00,0x00,0x00,0xff,0x90,0x08,0x00,0x00,
    0x00,0x81,0xc4,0x14,0x00,0x00,0x00,0x58,0x50,0x68,0x00,0x00,0x80,0x3f,0x68,0x00,
    0x00,0x00,0x00,0x68,0x00,0x00,0x80,0x3f,0x68,0x02,0x00,0x00,0x00,0x68,0x01,0x00,
    0x00,0x00,0xff,0x90,0x18,0x00,0x00,0x00,0x81,0xc4,0x14,0x00,0x00,0x00,0x58,0x58,
    0xc3
  };

  uint8 dummy2[54] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // width, height
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // num textures, final texture
    0x50,0x8d,0x05,0x24,0x10,0x28,0x70,0x50,0x68,0x00,0x00,0xa0,0x40,0x68,0x00,0x00,
    0xa0,0x40,0x68,0x00,0x00,0x00,0x00,0xff,0x90,0x04,0x00,0x00,0x00,0x81,0xc4,0x0c,
    0x00,0x00,0x00,0x58,0x58,0xc3
  };



void __stdcall WinMainCRTStartup()
{
  gD3D = Direct3DCreate9( D3D_SDK_VERSION );
  if (!gD3D)
    ExitProcess(1);

  gHwnd = CreateWindow( "static",0,WS_POPUP|WS_VISIBLE,0,0,xRes, yRes,0,0,0,0);

  if (FAILED(gD3D->CreateDevice(D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, gHwnd, D3DCREATE_HARDWARE_VERTEXPROCESSING, &gPresentParmas, &gDevice)))
    return;

  do {
    gDevice->Clear(0, NULL, D3DCLEAR_TARGET|D3DCLEAR_ZBUFFER|D3DCLEAR_STENCIL, 0x000000, 1.0f, 0);
    gDevice->BeginScene();

    gDevice->EndScene();
    gDevice->Present(0,0,0,0);

  } while (!GetAsyncKeyState(VK_ESCAPE));

//  modifier_add(0,0,0,0,0);

  if (gDevice)
    gDevice->Release();
  gD3D->Release();
  DestroyWindow(gHwnd);

  ExitProcess(0);
}
